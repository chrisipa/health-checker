<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	
	<modelVersion>4.0.0</modelVersion>
	<groupId>de.papke</groupId>
	<artifactId>health-checker</artifactId>
	<version>1.0.5</version>
	<name>Health Checker</name>

	<properties>
        <!-- project configuration -->
      	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>      
     	<maven.compiler.source>${java.version}</maven.compiler.source>
     	<maven.compiler.target>${java.version}</maven.compiler.target>
      
		<!-- dependency versions -->
		<docker-maven-plugin.version>0.26.1</docker-maven-plugin.version>
		<unboundid-ldapsdk.version>2.3.1</unboundid-ldapsdk.version>
		<commons-exec.version>1.1</commons-exec.version>
		<commons-io.version>1.3.2</commons-io.version>
		<commons-lang3.version>3.3.2</commons-lang3.version>
		<commons-cli.version>1.2</commons-cli.version>
		<mongo-java-driver.version>2.12.4</mongo-java-driver.version>
		<jongo.version>1.1</jongo.version>
		<mysql-connector-java.version>5.1.34</mysql-connector-java.version>
		<postgresql.version>9.1-901.jdbc4</postgresql.version>
		<jtds.version>1.3.1</jtds.version>
		<ascii_table.version>1.0</ascii_table.version>
		<elasticsearch.version>0.19.2</elasticsearch.version>
		<solr-solrj.version>1.4.1</solr-solrj.version>
		<slf4j-simple.version>1.5.5</slf4j-simple.version>
		<httpclient.version>4.1.2</httpclient.version>
		<mail-api.version>1.6.2</mail-api.version>

		<!-- docker build configuration -->
		<registry>docker.io</registry>
		<pull.registry>${registry}</pull.registry>
		<push.registry>${registry}</push.registry>
		<tenant>chrisipa</tenant>
		<user>${tenant}</user>
		<group>${tenant}</group>
		<opt.folder>/opt</opt.folder>
		<jdk.version>8</jdk.version>
		<health.checker.folder>${opt.folder}/health-checker</health.checker.folder>
        <health.checker.start.script>${health.checker.folder}/health-checker</health.checker.start.script>
	</properties>

	<build>
		<finalName>${project.artifactId}</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<mainClass>de.papke.health.checker.Main</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<appendAssemblyId>false</appendAssemblyId>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
				<version>${docker-maven-plugin.version}</version>
                <extensions>true</extensions>
                <configuration>
                    <verbose>true</verbose>
                    <images>
                        <image>
                            <name>${push.registry}/${tenant}/${project.artifactId}</name>
                            <alias>${project.artifactId}</alias>
                            <build>
                                <tags>
                                    <tag>${project.version}</tag>
                                </tags>
                                <from>${pull.registry}/${tenant}/jdk-base:${jdk.version}</from>
								<env>
                                    <PATH>$PATH:${health.checker.folder}</PATH>
                                </env>
                                <optimise>true</optimise>
                                <entryPoint>
                                    <exec>
                                        <args>/${project.artifactId}.sh</args>
                                    </exec>
                                </entryPoint>
                                <runCmds>
                                    <!-- create health-checker folder -->
                                    <run>mkdir -p ${health.checker.folder}</run>

                                    <!-- change permissions -->
                                    <run>chown -R ${user}.${group} ${health.checker.folder}</run>                                    
                                </runCmds>
                                <user>${user}</user>
                                <assembly>
                                    <basedir>/</basedir>
                                    <inline>
                                        <dependencySets>
                                            <dependencySet>
                                                <includes>
                                                    <include>${project.groupId}:${project.artifactId}:${project.packaging}</include>
                                                </includes>
                                                <outputDirectory>${health.checker.folder}</outputDirectory>
												<outputFileNameMapping>${project.artifactId}.${project.packaging}</outputFileNameMapping>
                                            </dependencySet>
                                        </dependencySets>
                                        <fileSets>
                                            <fileSet>                                                
                                                <directory>${project.basedir}/src/main/resources/docker/entrypoint</directory>
                                                <outputDirectory>/</outputDirectory>
                                                <includes>
                                                    <include>**/*</include>
                                                </includes>
                                            </fileSet>                                     
                                            <fileSet>                                                
                                                <directory>${project.basedir}/bin</directory>
                                                <outputDirectory>${health.checker.folder}</outputDirectory>
                                                <includes>
                                                    <include>**/*</include>
                                                </includes>
                                            </fileSet>                                     
                                        </fileSets>
                                    </inline>
                                </assembly>
                            </build>
                        </image>
                    </images>
                </configuration>
            </plugin>
		</plugins>
	</build>
	
	<profiles>
	   <profile>
	       <id>generate-bom</id>
	       <build>
	           <plugins>
			       <plugin>
		                <groupId>org.cyclonedx</groupId>
		                <artifactId>cyclonedx-maven-plugin</artifactId>
		                <version>2.0.3</version>
		                <executions>
		                    <execution>
		                        <phase>verify</phase>
		                        <goals>
		                            <goal>makeAggregateBom</goal>
		                        </goals>
		                    </execution>
		                </executions>
		                <configuration>
		                    <projectType>library</projectType>
		                    <schemaVersion>1.2</schemaVersion>
		                    <includeBomSerialNumber>true</includeBomSerialNumber>
		                    <includeCompileScope>true</includeCompileScope>
		                    <includeProvidedScope>true</includeProvidedScope>
		                    <includeRuntimeScope>true</includeRuntimeScope>
		                    <includeSystemScope>true</includeSystemScope>
		                    <includeTestScope>false</includeTestScope>
		                    <includeLicenseText>false</includeLicenseText>
		                    <outputFormat>all</outputFormat>
		                </configuration>
		            </plugin>
	            </plugins>
            </build>
	   </profile>
	</profiles>	

	<repositories>
		<repository>
			<id>project-local</id>
			<name>project-local</name>
			<url>file:${project.basedir}/repo</url>
        </repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>com.unboundid</groupId>
			<artifactId>unboundid-ldapsdk</artifactId>
			<version>${unboundid-ldapsdk.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-exec</artifactId>
			<version>${commons-exec.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang3.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>${commons-cli.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>${mongo-java-driver.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jongo</groupId>
			<artifactId>jongo</artifactId>
			<version>${jongo.version}</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql-connector-java.version}</version>
		</dependency>
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.jtds</groupId>
			<artifactId>jtds</artifactId>
			<version>${jtds.version}</version>
		</dependency>
		<dependency>
			<groupId>com.bethecoder</groupId>
			<artifactId>ascii_table</artifactId>
			<version>${ascii_table.version}</version>
		</dependency>
		<dependency>
			<groupId>org.elasticsearch</groupId>
			<artifactId>elasticsearch</artifactId>
			<version>${elasticsearch.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.solr</groupId>
			<artifactId>solr-solrj</artifactId>
			<version>${solr-solrj.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>${slf4j-simple.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>${httpclient.version}</version>
		</dependency>
		<dependency>
		    <groupId>javax.mail</groupId>
		    <artifactId>javax.mail-api</artifactId>
		    <version>${mail-api.version}</version>
		</dependency>
		<dependency>
    		<groupId>com.sun.mail</groupId>
    		<artifactId>javax.mail</artifactId>
    		<version>${mail-api.version}</version>
		</dependency>
	</dependencies>
</project>
